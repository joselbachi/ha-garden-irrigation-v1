
#==================
#=== Input_Numbers
#==================
input_number:
  # Temperature
  temp_minus0:
    name: Temp today
    min: -30
    max: 40
    icon: mdi:thermometer

  temp_minus1:
    name: Temp yesterday
    min: -30
    max: 40
    icon: mdi:thermometer

  temp_minus2:
    name: Temp 2 days ago
    min: -30
    max: 40
    icon: mdi:thermometer

  temp_minus3:
    name: Temp 3 days ago
    min: -30
    max: 40
    icon: mdi:thermometer

#  temp_minus4:
#    name: Temp 4 days ago
#    min: -30
#    max: 40
#    icon: mdi:thermometer

  # Rainfall
  rain_minus0:
    name: Rain today
    min: 0
    max: 100
    icon: mdi:weather-rainy

  rain_minus1:
    name: Rain yesterday
    min: 0
    max: 100
    icon: mdi:weather-rainy

  rain_minus2:
    name: Rain 2 days ago
    min: 0
    max: 100
    icon: mdi:weather-rainy

  rain_minus3:
    name: Rain 3 days ago
    min: 0
    max: 100
    icon: mdi:weather-rainy


  evapotranspiration_minus3:
    name: evapotranspiration 3 days ago
    min: -5
    max: 10
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'

  evapotranspiration_minus2:
    name: evapotranspiration 2 days ago
    min: -5
    max: 10
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'

  evapotranspiration_minus1:
    name: evapotranspiration yesterday
    min: -5
    max: 10
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'




  waterbucket_zone1:
    name: Waterbucket Zone 1
    min: -100
    max: 200
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'

  waterbucket_zone2:
    name: Waterbucket Zone 2
    min: -100
    max: 200
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'

  waterbucket_zone3:
    name: Waterbucket Zone 3
    min: -100
    max: 200
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'

  waterbucket_zone4:
    name: Waterbucket Zone 4
    min: -100
    max: 200
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'

  waterbucket_zone5:
    name: Waterbucket Zone 5
    min: -100
    max: 200
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'   

  waterbucket_zone6:
    name: Waterbucket Zone 6
    min: -100
    max: 200
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'

  waterbucket_zone7:
    name: Waterbucket Zone 7
    min: -100
    max: 200
    step: 1
    icon: mdi:water
    unit_of_measurement: 'mm'

#============
#=== Sensors
#============
sensor:
  - platform: template
    sensors:
      # Weather information sensors
      # Temperature
      temp_minus0:
        friendly_name: Temp today
        value_template: "{{ states('input_number.temp_minus0') }}"     
        unit_of_measurement: "°C"

      temp_minus1:
        friendly_name: Temp yesterday
        value_template: "{{ states('input_number.temp_minus1') }}"     
        unit_of_measurement: "°C"

      temp_minus2:
        friendly_name: Temp 2 days ago
        value_template: "{{ states('input_number.temp_minus2') }}"     
        unit_of_measurement: "°C"

      temp_minus3:
        friendly_name: Temp 3 days ago
        value_template: "{{ states('input_number.temp_minus3') }}"     
        unit_of_measurement: "°C"

#      temp_minus4:
#        friendly_name: Temp 4 days ago
#        value_template: "{{ states('input_number.temp_minus4') }}"     
#        unit_of_measurement: "°C"

#      temp_high_2days:
#        friendly_name: Avg 2 day temp
#        value_template: "{{ states('input_number.temp_high_2days') }}"     
#        unit_of_measurement: "°C"

#      temp_high_5days:
#        friendly_name: Avg 5 day temp
#        value_template: "{{ states('input_number.temp_high_5days') }}"     
#        unit_of_measurement: "°C"


# Rainfall
#      rain_minus0:
#        friendly_name: Rain today
#        value_template: "{{ states('input_number.rain_minus0') }}"     
#        unit_of_measurement: "mm"

      rain_minus0:
        friendly_name: Rain today
        value_template: "{{ states('sensor.calculated_max_rain_today') }}"     
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('sensor.calculated_max_rain_today')) > 10 %}
            mdi:weather-pouring
          {% elif float(states('sensor.calculated_max_rain_today')) > 5 %}
            mdi:weather-rainy
          {% else %}
            mdi:weather-partly-rainy
          {% endif %}

      rain_minus1:
        friendly_name: Rain yesterday
        value_template: "{{ float(states('sensor.calculated_average_rain_yesterday')) }}"     
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('sensor.calculated_average_rain_yesterday')) > 10 %}
            mdi:weather-pouring
          {% elif float(states('sensor.calculated_average_rain_yesterday')) > 5 %}
            mdi:weather-rainy
          {% else %}
            mdi:weather-partly-rainy
          {% endif %}

      rain_minus2:
        friendly_name: Rain 2 days ago
        value_template: "{{ states('input_number.rain_minus2') }}"     
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.rain_minus2')) > 10 %}
            mdi:weather-pouring
          {% elif float(states('input_number.rain_minus2')) > 5 %}
            mdi:weather-rainy
          {% else %}
            mdi:weather-partly-rainy
          {% endif %}

      rain_minus3:
        friendly_name: Rain 3 days ago
        value_template: "{{ states('input_number.rain_minus3') }}"     
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.rain_minus3')) > 10 %}
            mdi:weather-pouring
          {% elif float(states('input_number.rain_minus3')) > 5 %}
            mdi:weather-rainy
          {% else %}
            mdi:weather-partly-rainy
          {% endif %}

#      rain_3days_ratio:
#        friendly_name: Last 3 days rain adj. multiplyer
#        value_template: "{{ states('input_number.rain_3days_ratio') }}"     

# Evapotranspiration

      evapotranspiration_minus1:
        friendly_name: Evapotranspiration yesterday
        value_template: "{{ states('input_number.evapotranspiration_minus1') | round(2) }}"     
        unit_of_measurement: "mm"

      evapotranspiration_minus2:
        friendly_name: Evapotranspiration 2 days ago
        value_template: "{{ states('input_number.evapotranspiration_minus2') | round(2) }}"     
        unit_of_measurement: "mm"

      evapotranspiration_minus3:
        friendly_name: Evapotranspiration 3 days ago
        value_template: "{{ states('input_number.evapotranspiration_minus3') | round(2) }}"     
        unit_of_measurement: "mm"


      waterbucket_zone1:
        friendly_name: Zone 1 water bucket
        value_template: "{{ states('input_number.waterbucket_zone1') | round(2) }}"
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.waterbucket_zone1')) > 0.1 %}
            mdi:beaker-plus
          {% elif float(states('input_number.waterbucket_zone1')) < -0.1 %}
            mdi:beaker-minus-outline
          {% else %}
            mdi:beaker-check
          {% endif %}

      waterbucket_zone2:
        friendly_name: Zone 2 water bucket
        value_template: "{{ states('input_number.waterbucket_zone2') | round(2) }}"
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.waterbucket_zone2')) > 0.1 %}
            mdi:beaker-plus
          {% elif float(states('input_number.waterbucket_zone2')) < -0.1 %}
            mdi:beaker-minus-outline
          {% else %}
            mdi:beaker-check
          {% endif %}

      waterbucket_zone3:
        friendly_name: Zone 3 water bucket
        value_template: "{{ states('input_number.waterbucket_zone3') | round(2) }}"
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.waterbucket_zone3')) > 0.1 %}
            mdi:beaker-plus
          {% elif float(states('input_number.waterbucket_zone3')) < -0.1 %}
            mdi:beaker-minus-outline
          {% else %}
            mdi:beaker-check
          {% endif %}
              
      waterbucket_zone4:
        friendly_name: Zone 4 water bucket
        value_template: "{{ states('input_number.waterbucket_zone4') | round(2) }}"
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.waterbucket_zone4')) > 0.1 %}
            mdi:beaker-plus
          {% elif float(states('input_number.waterbucket_zone4')) < -0.1 %}
            mdi:beaker-minus-outline
          {% else %}
            mdi:beaker-check
          {% endif %}

      waterbucket_zone5:
        friendly_name: Zone 5 water bucket
        value_template: "{{ states('input_number.waterbucket_zone5') | round(2) }}"
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.waterbucket_zone5')) > 0.1 %}
            mdi:beaker-plus
          {% elif float(states('input_number.waterbucket_zone5')) < -0.1 %}
            mdi:beaker-minus-outline
          {% else %}
            mdi:beaker-check
          {% endif %}
          
      waterbucket_zone6:
        friendly_name: Zone 6 water bucket
        value_template: "{{ states('input_number.waterbucket_zone6') | round(2) }}"
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.waterbucket_zone6')) > 0.1 %}
            mdi:beaker-plus
          {% elif float(states('input_number.waterbucket_zone6')) < -0.1 %}
            mdi:beaker-minus-outline
          {% else %}
            mdi:beaker-check
          {% endif %}

      waterbucket_zone7:
        friendly_name: Zone 7 water bucket
        value_template: "{{ states('input_number.waterbucket_zone7') | round(2) }}"
        unit_of_measurement: "mm"
        icon_template: >
          {% if float(states('input_number.waterbucket_zone7')) > 0.1 %}
            mdi:beaker-plus
          {% elif float(states('input_number.waterbucket_zone7')) < -0.1 %}
            mdi:beaker-minus-outline
          {% else %}
            mdi:beaker-check
          {% endif %}


#=================
# === Automations
#=================
automation:

  #====================================================
  #=== Update yesterday's rain when observation data comes in
  #====================================================
  - alias: Irrigation Weather Data - observed rain yesterday
    initial_state: on
    trigger:
#      - platform: state
#        entity_id: sensor.calculated_average_rain_yesterday
      - platform: time
        at: '11:30:00'

    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.observed_rain_yesterday
          value: "{{ states('sensor.calculated_average_rain_yesterday') }}"

      - service: script.set_waterbucket
        data_template:
          zone: '1'
          adjustment: >
            {{ float(states('input_number.observed_rain_yesterday')) - 
               float(states('input_number.smart_irrigation_eod_estimated_rain')) }}
      - wait_template: "{{ is_state('script.set_waterbucket', 'off') }}"

      - service: script.set_waterbucket
        data_template:
          zone: '2'
          adjustment: >
            {{ float(states('input_number.observed_rain_yesterday')) - 
               float(states('input_number.smart_irrigation_eod_estimated_rain')) }}
      - wait_template: "{{ is_state('script.set_waterbucket', 'off') }}"

      - service: script.set_waterbucket
        data_template:
          zone: '3'
          adjustment: >
            {{ float(states('input_number.observed_rain_yesterday')) - 
               float(states('input_number.smart_irrigation_eod_estimated_rain')) }}
      - wait_template: "{{ is_state('script.set_waterbucket', 'off') }}"

      - service: script.set_waterbucket
        data_template:
          zone: '4'
          adjustment: >
            {{ float(states('input_number.observed_rain_yesterday')) - 
               float(states('input_number.smart_irrigation_eod_estimated_rain')) }}
      - wait_template: "{{ is_state('script.set_waterbucket', 'off') }}"

      - service: script.set_waterbucket
        data_template:
          zone: '5'
          adjustment: >
            {{ float(states('input_number.observed_rain_yesterday')) - 
               float(states('input_number.smart_irrigation_eod_estimated_rain')) }}
      - wait_template: "{{ is_state('script.set_waterbucket', 'off') }}"

      - service: script.set_waterbucket
        data_template:
          zone: '6'
          adjustment: >
            {{ float(states('input_number.observed_rain_yesterday')) - 
               float(states('input_number.smart_irrigation_eod_estimated_rain')) }}
      - wait_template: "{{ is_state('script.set_waterbucket', 'off') }}"

      - service: script.set_waterbucket
        data_template:
          zone: '7'
          adjustment: >
            {{ float(states('input_number.observed_rain_yesterday')) - 
               float(states('input_number.smart_irrigation_eod_estimated_rain')) }}
      - wait_template: "{{ is_state('script.set_waterbucket', 'off') }}"
      
#=============
# === Scripts
#=============
script:

  #====================================================
  #=== Collect new and cycle historic TEMPERATURE data
  #====================================================
  cycle_garden_temperature_data:
    sequence:

      # Cycle the temperature figures.
#      # Passed {{ loop_count}} which is the number relating to the highest entity
      # e.g. input_number.temp_minus4

      # Setting the temperature for today: sensor.calculated_max_temp_now

      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.temp_minus3'
          value: >
            {{ states('input_number.temp_minus2') }} 

      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.temp_minus2'
          value: >
            {{ states('input_number.temp_minus1') }} 

      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.temp_minus1'
          value: >
            {{ states('sensor.calculated_average_temp_yesterday') }} 

      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.temp_minus0'
          value: >
            {{ states('sensor.smhi_home_avg_temp_forecast') }} 

 
#      - service: script.calculate_evapotranspiration
#        data_template:
#          entity_set: 'input_number.evapotranspiration_minus1'
#          average_temp: >
#            {{ states('sensor.calculated_average_temp_yesterday') }}
#      - wait_template: "{{ is_state('script.calculate_evapotranspiration', 'off') }}"




#      - service: input_number.set_value
#        data_template:
#          entity_id: >
#            input_number.temp_minus{{ loop_count }}
#          value: >
#            {% if loop_count | int == 0 %}
#              {{ states('sensor.calculated_max_temp_now') | float }}
#            {% else %}
#              {{ states('input_number.temp_minus' ~ (loop_count | int - 1) | string) }}
#            {% endif %}

      # Stop when count is 0
#      - condition: template
#        value_template: >
#          {{ loop_count | int > 0 }}

      # Stop the looping script...
#      - service: homeassistant.turn_off
#        entity_id: script.loop_garden_temperature_data

      # ...before looping
#      - service: script.loop_garden_temperature_data
#        data_template:
#          loop_count: >
#            {{ loop_count }}


  #============================================
  #=== Loop the script garden_temperature_data
  #============================================
#  loop_garden_temperature_data:
#    sequence:

      # Stop the calling script...
#      - service: homeassistant.turn_off
#        entity_id: script.garden_temperature_data

      # ...then restart it
#      - service: script.garden_temperature_data
#        data_template:
#          loop_count: >
#            {{ loop_count | int - 1 }}


  #=================================================
  #=== Collect new and cycle historic RAINFALL data
  #=================================================
  cycle_garden_rainfall_data:
    sequence:

      # Cycle the rainfall figures.
#      # Passed {{ loop_count}} which is the number relating to the highest entity
      # e.g. input_number.rain_minus3

      # Now using sensor.smartweather_rain_yesterday ------ sensor.dark_sky_precip_intensity
      # Make todays rain zero

      - service: input_number.set_value
        data_template:
          entity_id: >
            input_number.rain_minus3
          value: >
            {{ states('input_number.rain_minus2') }} 

      - service: input_number.set_value
        data_template:
          entity_id: >
            input_number.rain_minus2
          value: >
            {{ states('input_number.rain_minus1') }} 

      - service: input_number.set_value
        data_template:
          entity_id: >
            input_number.rain_minus1
          value: >
            {{ states('sensor.calculated_average_rain_yesterday') }} 

      - service: input_number.set_value
        data_template:
          entity_id: >
            input_number.rain_minus0
          value: >
            {{ states('sensor.calculated_max_rain_today') }} 

#          value: >
#            {% if loop_count | int == 0 %}
#              {{ states('sensor.calculated_max_rain_today') }}
#            {% elif loop_count | int == 1 %}
#              {{ states('sensor.calculated_average_rain_yesterday') }} 
#            {% else %}
#              {{ states('input_number.rain_minus' ~ (loop_count | int - 1) | string) }}
#            {% endif %}

      # # Stop when count is 0
#      - condition: template
#        value_template: >
#          {{ loop_count | int > 0 }}

      # Stop when count is 1 because day zero is rain today which
      # is collected directly from the sensor.smartweather_rain_today
      #- condition: template
      #  value_template: >
      #    {{ loop_count | int > 1 }}

      # Stop the looping script...
#      - service: homeassistant.turn_off
#        entity_id: script.loop_garden_rainfall_data

      # ...before looping
#      - service: script.loop_garden_rainfall_data
#        data_template:
#          loop_count: >
#            {{ loop_count }}


  #=========================================
  #=== Loop the script garden_rainfall_data
  #=========================================
#  loop_garden_rainfall_data:
#    sequence:

      # Stop the calling script...
#      - service: homeassistant.turn_off
#        entity_id: script.garden_rainfall_data

      # ...then restart it
#      - service: script.garden_rainfall_data
#        data_template:
#          loop_count: >
#            {{ loop_count | int - 1 }}

  #=================================================
  #=== Collect new and cycle historic Evotranspiration data
  #=================================================
  garden_evapotranspiration_data:
    sequence:

      # Cycle the evapotranspiration figures.

      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.evapotranspiration_minus3'
          value: >
            {{ states('input_number.evapotranspiration_minus2') }} 

      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.evapotranspiration_minus2'
          value: >
            {{ states('input_number.evapotranspiration_minus1') }} 

      - service: input_number.set_value
        data_template:
          entity_id: 'input_number.evapotranspiration_minus1'
          value: >
            {{ states('input_number.evapotranspiration_daily') }}



